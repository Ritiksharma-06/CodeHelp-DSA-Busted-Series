#include<bits/stdc++.h>
vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
   // Write your code here
   unordered_map<int,set<int>> map;
   for(auto x: edges)
   {
       map[x.first].insert(x.second);
       map[x.second].insert(x.first);
   }
   vector<int> bfs;
   vector<int> vis(vertex,0);
   for(int i = 0;i<vertex;i++)
   {
       if(!vis[i])
       {
           queue<int> q;
           q.push(i);
           vis[i]=1;
           while(!q.empty())
           {
               int node = q.front();
               q.pop();
               bfs.push_back(node);
               for(auto it:map[node])
               {
                   if(!vis[it])
                   {
                       q.push(it);
                       vis[it]=1;                        
                   }
               }
           }
       }
   }
   return bfs;
}
